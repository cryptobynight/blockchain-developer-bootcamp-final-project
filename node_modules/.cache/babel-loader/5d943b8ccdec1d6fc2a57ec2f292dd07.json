{"ast":null,"code":"import _toConsumableArray from \"/Users/majikk/Desktop/ConsenSys/blockchain-developer-bootcamp-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/majikk/Desktop/ConsenSys/blockchain-developer-bootcamp-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/majikk/Desktop/ConsenSys/blockchain-developer-bootcamp-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/majikk/Desktop/ConsenSys/blockchain-developer-bootcamp-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/majikk/Desktop/ConsenSys/blockchain-developer-bootcamp-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/majikk/Desktop/ConsenSys/blockchain-developer-bootcamp-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/majikk/Desktop/ConsenSys/blockchain-developer-bootcamp-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/majikk/Desktop/ConsenSys/blockchain-developer-bootcamp-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/majikk/Desktop/ConsenSys/blockchain-developer-bootcamp-final-project/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Diamonds from '../abis/Diamonds.json';\nimport { MDBCard, MDBCardBody, MDBCardTitle } from 'mdb-react-ui-kit';\nimport './App.css';\nimport { diamondbox, diamondcolor } from './Colors.js'; // import detectEthereumProvider from \"@metamask/detect-provider\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum); //   await window.ethereum.enable()\n\n                _context2.next = 4;\n                return window.ethereum.send('eth_requestAccounts');\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, abi, address, contract, totalSupply, mySupply, i, diamond, _i, index, temp, myDiamond;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                // const accounts = await ethereum.request({ method: 'eth_accounts' });\n                this.setState({\n                  account: accounts[0]\n                }); //get contract\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = Diamonds.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 44;\n                  break;\n                }\n\n                abi = Diamonds.abi;\n                address = networkData.address;\n                contract = new web3.eth.Contract(abi, address);\n                this.setState({\n                  contract: contract\n                }); //get total supply\n\n                _context3.next = 16;\n                return contract.methods.totalSupply().call();\n\n              case 16:\n                totalSupply = _context3.sent;\n                this.setState({\n                  totalSupply: totalSupply\n                }); //get my supply (for user)\n\n                _context3.next = 20;\n                return contract.methods.tokensOfOwner(this.state.account).call();\n\n              case 20:\n                mySupply = _context3.sent;\n                this.setState({\n                  mySupply: mySupply\n                }); //load diamonds\n\n                i = 0;\n\n              case 23:\n                if (!(i < totalSupply)) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                _context3.next = 26;\n                return contract.methods.diamonds(i).call();\n\n              case 26:\n                diamond = _context3.sent;\n                this.setState({\n                  diamonds: [].concat(_toConsumableArray(this.state.diamonds), [diamond])\n                });\n\n              case 28:\n                i++;\n                _context3.next = 23;\n                break;\n\n              case 31:\n                _i = 0;\n\n              case 32:\n                if (!(_i < mySupply.length)) {\n                  _context3.next = 42;\n                  break;\n                }\n\n                index = mySupply[_i]; // const myDiamond = await contract.methods.diamonds(index).call()\n\n                _context3.next = 36;\n                return contract.methods.diamonds(index).call();\n\n              case 36:\n                temp = _context3.sent;\n                myDiamond = [temp.chemistry, temp.diamondId]; //create const for diamond index from main list, use as key\n                //const diamondIndex = await contract.methods. -- use ownedTokenIndex from Enumerable\n\n                this.setState({\n                  myDiamonds: [].concat(_toConsumableArray(this.state.myDiamonds), [myDiamond])\n                });\n\n              case 39:\n                _i++;\n                _context3.next = 32;\n                break;\n\n              case 42:\n                _context3.next = 45;\n                break;\n\n              case 44:\n                window.alert(\"Smart contract not deployed.\");\n\n              case 45:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"generateBackground\",\n    value: function generateBackground() {\n      var num = Math.floor(Math.random() * 99);\n      var color = diamondbox[num];\n      return color;\n    }\n  }, {\n    key: \"generateDiamondColor\",\n    value: function generateDiamondColor() {\n      var num = Math.floor(Math.random() * 99);\n      var color = diamondcolor[num];\n      return color;\n    }\n  }, {\n    key: \"generateImperfection\",\n    value: function generateImperfection() {\n      var possible = '01111';\n      var imperfection = possible[Math.floor(Math.random() * 5)];\n      return imperfection;\n    }\n  }, {\n    key: \"generateSparkle\",\n    value: function generateSparkle() {\n      var num = Math.floor(Math.random() * 2); // Case 0: solid, Case 1: solid + flicker, Case 2: none\n\n      switch (num) {\n        case 0:\n          var sparkle = '1xxxxxxx ';\n          break;\n\n        case 1:\n          sparkle = '1flicker ';\n          break;\n\n        case 2:\n          sparkle = '0xxxxxxx ';\n          break;\n\n        default:\n          sparkle = '0xxxxxxx ';\n          break;\n      }\n\n      return sparkle;\n    }\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.mint = function (diamond) {\n      _this.state.contract.methods.mint(diamond).send({\n        from: _this.state.account\n      }).once('receipt', function (receipt) {\n        _this.setState({\n          diamonds: [].concat(_toConsumableArray(_this.state.diamonds), [diamond])\n        });\n      }).on('confirmation', function (confNumber, receipt, latestBlockHash) {\n        window.alert(\"Congratulations! Your diamond has been mined!\");\n      }).on('error', function (error) {\n        window.alert(\"Mint failed!\\n\\nDiamond may already be mined.\");\n      });\n    };\n\n    _this.transfer = function (to, diamondId) {\n      console.log(diamondId);\n\n      _this.state.contract.methods.transferFrom(_this.state.account, to, diamondId).send({\n        from: _this.state.account\n      }) // .once('receipt', (receipt) => {\n      //     this.setState({\n      //         diamonds:[...this.state.diamonds, diamond]\n      //     })\n      // })\n      .on('confirmation', function (confNumber, receipt, latestBlockHash) {\n        window.alert(\"Your diamond has been transferred.\\n\\nPlease refresh the page to see changes.\");\n      }).on('error', function (error) {\n        window.alert(\"Transfer failed.\\n\\nPlease check your details and try again.\");\n      });\n    };\n\n    _this.state = {\n      account: '',\n      contract: null,\n      totalSupply: 0,\n      mySupply: [],\n      diamonds: [],\n      myDiamonds: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-brand col-sm-3 col-md-3 mr-0\",\n        style: {\n          color: 'white',\n          fontSize: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"diamonds mined: \", this.state.totalSupply.toString()), React.createElement(\"ul\", {\n        className: \"nav-bar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"navbar-brand text-nowrap d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-white\",\n        style: {\n          fontSize: '0.8rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"wallet: \", this.state.account)))), React.createElement(\"div\", {\n        className: \"container-fluid mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        className: \"col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: 'black',\n          fontSize: '7rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Diamond Hands\"), React.createElement(\"div\", {\n        className: \"diamondmain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"svg\", {\n        version: \"1.1\",\n        viewBox: \"0 0 211.67 211.67\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"g\", {\n        id: \"dbody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"path\", {\n        className: \"diamond_body\",\n        fill: \"#181285\",\n        d: \"m50.635 25.94-17.636 19.99 21.499-0.077514 12.417-19.912h-16.279zm25.804 0-9.4484 20.12 38.573-0.39118 0.14521-0.0016h0.061l38.652 0.35448-9.3177-20.082h-58.665zm68.238 0 12.373 20.069 21.622 0.14418-17.669-20.213h-16.325zm-111.68 25.968 36.589 66.724 35.975 67.097-25.348-67.097-25.717-66.566-21.499-0.15968zm72.564 133.82 19.268-66.933 19.592-66.558-38.655 0.2067-0.20619-0.0016 0.17673 0.0021h-0.0315l-0.14521-0.0021-38.57-0.53898 19.448 66.724 19.123 67.097zm0 0 36.25-66.933 36.859-66.558-21.622 0.06149-25.946 66.494-25.54 66.933z\",\n        fillRule: \"evenodd\",\n        strokeWidth: \".97154\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(\"path\", {\n        className: \"flicker\",\n        opacity: \"1\",\n        id: \"small_sparkle\",\n        d: \"m177.82 54.405-1.6726 6.5908-0.38773-6.8497-5.9836 0.21276 5.5616-2.5394-2.0255-6.4592 3.825 5.2802 4.7318-4.2048-3.1977 5.8029 4.9498 3.8606z\",\n        strokeWidth: \".11306\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(\"path\", {\n        className: \"flicker\",\n        opacity: \"1\",\n        id: \"big_sparkle\",\n        d: \"m80.832 26.361-3.5654 10.707-0.82655-11.127-12.755 0.34563 11.856-4.1254-4.3179-10.493 8.1539 8.5778 10.087-6.8307-6.8166 9.4269 10.552 6.2715z\",\n        strokeWidth: \".21041\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      })), React.createElement(\"rect\", {\n        className: \"imperfection_middle\",\n        opacity: \"0\",\n        x: \"113.68\",\n        y: \"79.171\",\n        width: \"2.6458\",\n        height: \"2.6458\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"rect\", {\n        className: \"imperfection_top\",\n        opacity: \"0\",\n        x: \"127.52\",\n        y: \"38.325\",\n        width: \"2.6458\",\n        height: \"2.6458\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(\"rect\", {\n        className: \"imperfection_left\",\n        opacity: \"0\",\n        x: \"45.872\",\n        y: \"63.368\",\n        width: \"2.6458\",\n        height: \"2.6458\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }))), React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault(); // const diamond = this.diamond.value\n\n          var backgroundcolor = _this2.generateBackground();\n\n          var diamondbody = _this2.generateDiamondColor();\n\n          var mid_imp = _this2.generateImperfection();\n\n          var top_imp = _this2.generateImperfection();\n\n          var left_imp = _this2.generateImperfection();\n\n          var small_sparkle = _this2.generateSparkle() + 'small_sparkle';\n          var big_sparkle = _this2.generateSparkle() + 'big_sparkle'; // const diamond_num = this.state.diamonds.length + 1\n\n          var diamond = backgroundcolor + diamondbody + mid_imp + top_imp + left_imp + small_sparkle + big_sparkle;\n\n          _this2.mint(diamond);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-colour-1\",\n        value: \"Mine Diamond\",\n        style: {\n          marginTop: '40px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Welcome to Diamond Hands - the diamond mine for unique, generative NFTs.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Diamonds are all uniquely mined and one of a kind. Each diamond can only be owned by a single person.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Every diamond is algorithmically generated and assigned a unique chemistry. Rarity of each color combination is 1 in 10,000 - that means there's a 0.01% chance of achieving any particular color combination.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Attributes are another story. Big sparkles and small sparkles, if you're lucky enough to get them, will be solid or flickering. Imperfections are common and there three different locations. Imperfections are either there or they're not, and there's a 1 in 5 chance of each individual imperfection.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"A flawless diamond will have zero imperfections and two flickering sparkles. Your odds of mining a flawless diamond of any color combination are 1 in 1,125 - or 0.09%.\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        className: \"transfercard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          var address = _this2.addressinput.value;\n          var diamond = _this2.diamondId.value;\n\n          _this2.transfer(address, diamond);\n\n          _this2.addressinput.value = '';\n          _this2.diamondId.value = '';\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"diamond #...\",\n        className: \"form-control mb-1 inputbox\",\n        style: {\n          fontFamily: 'sans-serif'\n        },\n        ref: function ref(input) {\n          return _this2.diamondId = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"wallet address...\",\n        className: \"form-control mb-1 inputbox\",\n        style: {\n          fontFamily: 'sans-serif'\n        },\n        ref: function ref(input) {\n          return _this2.addressinput = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-colour-1\",\n        value: \"Transfer\",\n        style: {\n          margin: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      })))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        style: {\n          color: 'black',\n          fontSize: '3rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"My Diamonds\"), React.createElement(\"div\", {\n        className: \"row textCenter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, this.state.myDiamonds.map(function (diamond, key) {\n        return React.createElement(\"div\", {\n          key: diamond,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, React.createElement(MDBCard, {\n          className: \"token\",\n          style: {\n            maxWidth: '25rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"diamond\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, React.createElement(\"svg\", {\n          version: \"1.1\",\n          viewBox: \"0 0 211.67 211.67\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, React.createElement(\"rect\", {\n          className: \"backgroundcolor\",\n          width: \"211.67\",\n          height: \"211.67\",\n          fill: diamond[0].substring(0, 7),\n          strokeWidth: \".22252\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }), React.createElement(\"g\", {\n          id: \"dbody\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, React.createElement(\"path\", {\n          className: \"diamond_body\",\n          fill: diamond[0].substring(7, 14),\n          d: \"m50.635 25.94-17.636 19.99 21.499-0.077514 12.417-19.912h-16.279zm25.804 0-9.4484 20.12 38.573-0.39118 0.14521-0.0016h0.061l38.652 0.35448-9.3177-20.082h-58.665zm68.238 0 12.373 20.069 21.622 0.14418-17.669-20.213h-16.325zm-111.68 25.968 36.589 66.724 35.975 67.097-25.348-67.097-25.717-66.566-21.499-0.15968zm72.564 133.82 19.268-66.933 19.592-66.558-38.655 0.2067-0.20619-0.0016 0.17673 0.0021h-0.0315l-0.14521-0.0021-38.57-0.53898 19.448 66.724 19.123 67.097zm0 0 36.25-66.933 36.859-66.558-21.622 0.06149-25.946 66.494-25.54 66.933z\",\n          fillRule: \"evenodd\",\n          strokeWidth: \".97154\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        }), React.createElement(\"path\", {\n          className: diamond[0].substring(18, 39),\n          opacity: diamond[0].substring(17, 18),\n          id: \"small_sparkle\",\n          d: \"m177.82 54.405-1.6726 6.5908-0.38773-6.8497-5.9836 0.21276 5.5616-2.5394-2.0255-6.4592 3.825 5.2802 4.7318-4.2048-3.1977 5.8029 4.9498 3.8606z\",\n          strokeWidth: \".11306\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }), React.createElement(\"path\", {\n          className: diamond[0].substring(40, 59),\n          opacity: diamond[0].substring(39, 40),\n          id: \"big_sparkle\",\n          d: \"m80.832 26.361-3.5654 10.707-0.82655-11.127-12.755 0.34563 11.856-4.1254-4.3179-10.493 8.1539 8.5778 10.087-6.8307-6.8166 9.4269 10.552 6.2715z\",\n          strokeWidth: \".21041\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        })), React.createElement(\"rect\", {\n          className: \"imperfection_middle\",\n          opacity: diamond[0].substring(14, 15),\n          x: \"113.68\",\n          y: \"79.171\",\n          width: \"2.6458\",\n          height: \"2.6458\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }), React.createElement(\"rect\", {\n          className: \"imperfection_top\",\n          opacity: diamond[0].substring(15, 16),\n          x: \"127.52\",\n          y: \"38.325\",\n          width: \"2.6458\",\n          height: \"2.6458\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }), React.createElement(\"rect\", {\n          className: \"imperfection_left\",\n          opacity: diamond[0].substring(16, 17),\n          x: \"45.872\",\n          y: \"63.368\",\n          width: \"2.6458\",\n          height: \"2.6458\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }))), React.createElement(MDBCardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, React.createElement(MDBCardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, \"Diamond #\", diamond[1].toString())))));\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/majikk/Desktop/ConsenSys/blockchain-developer-bootcamp-final-project/src/components/App.js"],"names":["React","Component","Web3","Diamonds","MDBCard","MDBCardBody","MDBCardTitle","diamondbox","diamondcolor","App","loadWeb3","loadBlockchainData","window","ethereum","web3","send","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","networks","abi","address","contract","Contract","methods","totalSupply","call","tokensOfOwner","state","mySupply","i","diamonds","diamond","length","index","temp","myDiamond","chemistry","diamondId","myDiamonds","num","Math","floor","random","color","possible","imperfection","sparkle","props","mint","from","once","receipt","on","confNumber","latestBlockHash","error","transfer","to","console","log","transferFrom","fontSize","toString","event","preventDefault","backgroundcolor","generateBackground","diamondbody","generateDiamondColor","mid_imp","generateImperfection","top_imp","left_imp","small_sparkle","generateSparkle","big_sparkle","marginTop","display","justifyContent","alignItems","addressinput","value","fontFamily","input","margin","map","key","maxWidth","substring"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Diamonds from '../abis/Diamonds.json';\nimport {MDBCard, MDBCardBody, MDBCardTitle} from 'mdb-react-ui-kit';\nimport './App.css';\nimport {diamondbox, diamondcolor} from './Colors.js';\n// import detectEthereumProvider from \"@metamask/detect-provider\";\n\nclass App extends Component {\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n    }\n\n    async loadWeb3() {\n        if (window.ethereum) {\n          window.web3 = new Web3(window.ethereum)\n            //   await window.ethereum.enable()\n            await window.ethereum.send('eth_requestAccounts')\n        }\n        else if (window.web3) {\n          window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n          window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n      }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        // const accounts = await ethereum.request({ method: 'eth_accounts' });\n        this.setState({account:accounts[0]})\n\n        //get contract\n        const networkId = await web3.eth.net.getId();\n        const networkData = Diamonds.networks[networkId];\n\n        if(networkData) {\n            const abi = Diamonds.abi;\n            const address = networkData.address;\n            const contract = new web3.eth.Contract(abi, address);\n            this.setState({contract})\n\n            //get total supply\n            const totalSupply = await contract.methods.totalSupply().call()\n            this.setState({totalSupply})\n\n            //get my supply (for user)\n            const mySupply = await contract.methods.tokensOfOwner(this.state.account).call()\n            this.setState({mySupply})\n            \n            //load diamonds\n            for(let i = 0; i < totalSupply; i++) {\n                const diamond = await contract.methods.diamonds(i).call()\n                this.setState({\n                    diamonds:[...this.state.diamonds, diamond]\n                })\n            }\n\n            //load mydiamonds (for user)\n            for(let i = 0; i < mySupply.length; i++) {\n                const index = mySupply[i]\n                // const myDiamond = await contract.methods.diamonds(index).call()\n                const temp = await contract.methods.diamonds(index).call()\n                const myDiamond = [temp.chemistry, temp.diamondId]\n                //create const for diamond index from main list, use as key\n                //const diamondIndex = await contract.methods. -- use ownedTokenIndex from Enumerable\n                \n                this.setState({\n                    myDiamonds:[...this.state.myDiamonds, myDiamond]\n                })\n            }\n    \n        } else {\n            window.alert(\"Smart contract not deployed.\")\n        }\n    }\n\n    mint = (diamond) => {\n        this.state.contract.methods.mint(diamond).send({from:this.state.account})\n        .once('receipt', (receipt) => {\n            this.setState({\n                diamonds:[...this.state.diamonds, diamond]\n            })\n        })\n        .on('confirmation', function(confNumber, receipt, latestBlockHash){ \n            window.alert(\"Congratulations! Your diamond has been mined!\")\n        })\n        .on('error', function(error){ \n            window.alert(\"Mint failed!\\n\\nDiamond may already be mined.\")\n        })\n    }\n\n    transfer = (to, diamondId) => {\n        console.log(diamondId)\n        this.state.contract.methods.transferFrom(this.state.account, to, diamondId).send({from:this.state.account})\n        // .once('receipt', (receipt) => {\n        //     this.setState({\n        //         diamonds:[...this.state.diamonds, diamond]\n        //     })\n        // })\n        .on('confirmation', function(confNumber, receipt, latestBlockHash){ \n            window.alert(\"Your diamond has been transferred.\\n\\nPlease refresh the page to see changes.\")\n        })\n        .on('error', function(error){ \n            window.alert(\"Transfer failed.\\n\\nPlease check your details and try again.\")\n        })\n\n    }\n\n    generateBackground() {\n        var num = Math.floor(Math.random() * 99);\n        var color = diamondbox[num]\n        return color;\n    }\n\n    generateDiamondColor() {\n        var num = Math.floor(Math.random() * 99);\n        var color = diamondcolor[num]\n        return color;\n    }\n\n    generateImperfection() {\n        var possible = '01111';\n        var imperfection = possible[Math.floor(Math.random() * 5)];\n    \n        return imperfection;\n    }\n\n    generateSparkle() {\n        var num = Math.floor(Math.random() * 2);\n        \n        // Case 0: solid, Case 1: solid + flicker, Case 2: none\n        switch (num) {\n            case 0:\n                var sparkle = '1xxxxxxx ';\n                break\n            case 1:\n                sparkle = '1flicker ';\n                break\n            case 2:\n                sparkle = '0xxxxxxx ';\n                break\n            default:\n                sparkle = '0xxxxxxx ';\n                break\n        }\n\n        return sparkle;\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: '',\n            contract: null,\n            totalSupply: 0,\n            mySupply: [],\n            diamonds:[],\n            myDiamonds:[]\n        }\n    }\n\n    render() {\n        return (\n            <div className='container-full'>\n                <nav className='navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow'>\n                    <div className='navbar-brand col-sm-3 col-md-3 mr-0' style={{color:'white', fontSize: '1rem'}}>\n                        diamonds mined: {this.state.totalSupply.toString()}\n                    </div>\n                    <ul className='nav-bar-nav px-3'>\n                        <li className='navbar-brand text-nowrap d-none d-sm-none d-sm-block'>\n                            <small className='text-white' style={{fontSize: '0.8rem'}}>\n                                wallet: {this.state.account}\n                            </small>\n                        </li>\n                    </ul>\n                </nav>\n\n                <div className='container-fluid mt-1'>\n                    <div className='row'>\n                        <main className='col-lg-12'>\n                            <div>\n                                <h1 style={{color:'black', fontSize: '7rem'}}>\n                                    Diamond Hands\n                                </h1>\n\n                                <div className='diamondmain'>\n                                    <svg  version=\"1.1\" viewBox=\"0 0 211.67 211.67\" xmlns=\"http://www.w3.org/2000/svg\">    \n                                        \n                                        <g id=\"dbody\">\n                                            <path className=\"diamond_body\" fill=\"#181285\" d=\"m50.635 25.94-17.636 19.99 21.499-0.077514 12.417-19.912h-16.279zm25.804 0-9.4484 20.12 38.573-0.39118 0.14521-0.0016h0.061l38.652 0.35448-9.3177-20.082h-58.665zm68.238 0 12.373 20.069 21.622 0.14418-17.669-20.213h-16.325zm-111.68 25.968 36.589 66.724 35.975 67.097-25.348-67.097-25.717-66.566-21.499-0.15968zm72.564 133.82 19.268-66.933 19.592-66.558-38.655 0.2067-0.20619-0.0016 0.17673 0.0021h-0.0315l-0.14521-0.0021-38.57-0.53898 19.448 66.724 19.123 67.097zm0 0 36.25-66.933 36.859-66.558-21.622 0.06149-25.946 66.494-25.54 66.933z\" fillRule=\"evenodd\" strokeWidth=\".97154\"/>\n                                            <path className=\"flicker\" opacity=\"1\" id=\"small_sparkle\" d=\"m177.82 54.405-1.6726 6.5908-0.38773-6.8497-5.9836 0.21276 5.5616-2.5394-2.0255-6.4592 3.825 5.2802 4.7318-4.2048-3.1977 5.8029 4.9498 3.8606z\" strokeWidth=\".11306\"/>\n                                            <path className=\"flicker\" opacity=\"1\" id=\"big_sparkle\" d=\"m80.832 26.361-3.5654 10.707-0.82655-11.127-12.755 0.34563 11.856-4.1254-4.3179-10.493 8.1539 8.5778 10.087-6.8307-6.8166 9.4269 10.552 6.2715z\" strokeWidth=\".21041\"/>\n                                        </g>\n                                        \n                                        <rect className=\"imperfection_middle\" opacity=\"0\" x=\"113.68\" y=\"79.171\" width=\"2.6458\" height=\"2.6458\"/>\n                                        <rect className=\"imperfection_top\" opacity=\"0\" x=\"127.52\" y=\"38.325\" width=\"2.6458\" height=\"2.6458\"/>\n                                        <rect className=\"imperfection_left\" opacity=\"0\" x=\"45.872\" y=\"63.368\" width=\"2.6458\" height=\"2.6458\"/>\n                                    </svg>\n                                </div>\n\n                                <form onSubmit={(event) => {\n                                    event.preventDefault()\n                                    // const diamond = this.diamond.value\n                                    \n                                    const backgroundcolor = this.generateBackground()\n                                    const diamondbody = this.generateDiamondColor()\n                                    const mid_imp = this.generateImperfection()\n                                    const top_imp = this.generateImperfection()\n                                    const left_imp = this.generateImperfection()\n                                    const small_sparkle = this.generateSparkle() + 'small_sparkle'\n                                    const big_sparkle = this.generateSparkle() + 'big_sparkle'\n                                    // const diamond_num = this.state.diamonds.length + 1\n                                    const diamond = backgroundcolor + diamondbody + mid_imp + top_imp + left_imp + small_sparkle + big_sparkle\n                                    \n                                    this.mint(diamond)\n                                }}>\n                                    <input type='submit' className='btn btn-colour-1' value='Mine Diamond' style={{marginTop:'40px'}}/>\n                                </form>\n                            </div>\n                        </main>\n                    </div>\n                    <hr></hr>\n                    \n                    <p>\n                    Welcome to Diamond Hands - the diamond mine for unique, generative NFTs.\n                    </p>\n                    <p>\n                    Diamonds are all uniquely mined and one of a kind. Each diamond can only be owned by a single person.\n                    </p>\n                    <p>\n                    Every diamond is algorithmically generated and assigned a unique chemistry. \n                    Rarity of each color combination is 1 in 10,000 - that means there's a 0.01% chance of achieving any particular color combination.\n                    </p>\n                    <p>\n                    Attributes are another story. Big sparkles and small sparkles, if you're lucky enough to get them, will be solid or flickering.\n                    Imperfections are common and there three different locations. Imperfections are either there or they're not, and there's a 1 in 5 chance of each individual imperfection.\n                    </p>\n                    <p>\n                    A flawless diamond will have zero imperfections and two flickering sparkles. Your odds of mining a flawless diamond of any color combination are 1 in 1,125 - or 0.09%.\n                    </p>\n\n                    <hr></hr>\n\n                    <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n                        <MDBCard className='transfercard' >\n                            <form onSubmit={(event)=>{\n                                event.preventDefault()\n                                const address = this.addressinput.value\n                                const diamond = this.diamondId.value\n\n                                this.transfer(address, diamond)\n\n                                this.addressinput.value = ''\n                                this.diamondId.value = ''\n                            }}>\n                                <input type='text' placeholder='diamond #...' className='form-control mb-1 inputbox' style={{fontFamily:'sans-serif'}} ref={(input) => this.diamondId = input}/>\n                                <input type='text' placeholder='wallet address...' className='form-control mb-1 inputbox' style={{fontFamily:'sans-serif'}} ref={(input) => this.addressinput = input}/>\n                                <input type='submit' className='btn btn-colour-1' value='Transfer' style={{margin:'10px'}}/>\n                            </form>\n                        </MDBCard>\n                    </div>\n\n                    <hr></hr>\n\n                    <h1 style={{color:'black', fontSize: '3rem'}}>\n                            My Diamonds\n                    </h1>\n\n                    <div className='row textCenter'>\n                        {this.state.myDiamonds.map((diamond, key) => \n                        { \n                            return (\n                                <div key={diamond}> \n                                    <div>\n                                        <MDBCard className='token' style={{maxWidth:'25rem'}}>\n                                            <div className='diamond'>\n                                                <svg  version=\"1.1\" viewBox=\"0 0 211.67 211.67\" xmlns=\"http://www.w3.org/2000/svg\">    \n                                                    <rect className=\"backgroundcolor\" width=\"211.67\" height=\"211.67\" fill={diamond[0].substring(0, 7)} strokeWidth=\".22252\"/>\n                                                    \n                                                    <g id=\"dbody\">\n                                                        <path className=\"diamond_body\" fill={diamond[0].substring(7, 14)} d=\"m50.635 25.94-17.636 19.99 21.499-0.077514 12.417-19.912h-16.279zm25.804 0-9.4484 20.12 38.573-0.39118 0.14521-0.0016h0.061l38.652 0.35448-9.3177-20.082h-58.665zm68.238 0 12.373 20.069 21.622 0.14418-17.669-20.213h-16.325zm-111.68 25.968 36.589 66.724 35.975 67.097-25.348-67.097-25.717-66.566-21.499-0.15968zm72.564 133.82 19.268-66.933 19.592-66.558-38.655 0.2067-0.20619-0.0016 0.17673 0.0021h-0.0315l-0.14521-0.0021-38.57-0.53898 19.448 66.724 19.123 67.097zm0 0 36.25-66.933 36.859-66.558-21.622 0.06149-25.946 66.494-25.54 66.933z\" fillRule=\"evenodd\" strokeWidth=\".97154\"/>\n                                                        <path className={diamond[0].substring(18, 39)} opacity={diamond[0].substring(17, 18)} id=\"small_sparkle\" d=\"m177.82 54.405-1.6726 6.5908-0.38773-6.8497-5.9836 0.21276 5.5616-2.5394-2.0255-6.4592 3.825 5.2802 4.7318-4.2048-3.1977 5.8029 4.9498 3.8606z\" strokeWidth=\".11306\"/>\n                                                        <path className={diamond[0].substring(40, 59)} opacity={diamond[0].substring(39, 40)} id=\"big_sparkle\" d=\"m80.832 26.361-3.5654 10.707-0.82655-11.127-12.755 0.34563 11.856-4.1254-4.3179-10.493 8.1539 8.5778 10.087-6.8307-6.8166 9.4269 10.552 6.2715z\" strokeWidth=\".21041\"/>\n                                                    </g>\n                                                    \n                                                    <rect className=\"imperfection_middle\" opacity={diamond[0].substring(14, 15)} x=\"113.68\" y=\"79.171\" width=\"2.6458\" height=\"2.6458\"/>\n                                                    <rect className=\"imperfection_top\" opacity={diamond[0].substring(15, 16)} x=\"127.52\" y=\"38.325\" width=\"2.6458\" height=\"2.6458\"/>\n                                                    <rect className=\"imperfection_left\" opacity={diamond[0].substring(16, 17)} x=\"45.872\" y=\"63.368\" width=\"2.6458\" height=\"2.6458\"/>\n                                                </svg>\n                                            </div>\n                                            <MDBCardBody>\n                                                <MDBCardTitle>Diamond #{diamond[1].toString()}</MDBCardTitle> \n                                                {/* {diamond.substring(59)}             */}\n                                            </MDBCardBody>\n                                        </MDBCard>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </div>   \n\n                </div>\n\n            </div>\n        )\n    }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}