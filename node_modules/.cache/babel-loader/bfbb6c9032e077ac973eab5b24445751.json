{"ast":null,"code":"import _slicedToArray from \"/Users/majikk/Desktop/ConsenSys/diamondV3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/majikk/Desktop/ConsenSys/diamondV3/src/context/ToastContext.js\";\nimport React, { createContext, useReducer } from 'react';\nexport var ToastCOntext = createContext();\nexport var ToastContextProvider = function ToastContextProvider(props) {\n  var _useReducer = useReducer(function (state, action) {\n    switch (action.type) {\n      case \"ADD_NOTIFICATION\":\n        return state;\n\n      case \"DELETE_NOTIFICATION\":\n        return state;\n\n      default:\n        return state;\n    }\n  }, notifications),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var notifications = [{\n    id: Math.floor(Date.now() / 1000),\n    type: \"SUCCESS\",\n    title: \"Successfully mined diamond\",\n    message: \"Got your NFT!\"\n  }];\n  dispatch({\n    type: \"ADD_NOTIFICATION\",\n    payload: {\n      id: id,\n      type: type,\n      title: title,\n      message: message\n    }\n  });\n  dispatch({\n    type: \"DELETE_NOTIFICATION\",\n    payload: id\n  });\n  return React.createElement(ToastContextProvider.Provider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/majikk/Desktop/ConsenSys/diamondV3/src/context/ToastContext.js"],"names":["React","createContext","useReducer","ToastCOntext","ToastContextProvider","props","state","action","type","notifications","dispatch","id","Math","floor","Date","now","title","message","payload","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,QAA+C,OAA/C;AAEA,OAAO,IAAMC,YAAY,GAAGF,aAAa,EAAlC;AAEP,OAAO,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAW;AAAA,oBAEjBH,UAAU,CAAC,UAACI,KAAD,EAAQC,MAAR,EAAmB;AACpD,YAAQA,MAAM,CAACC,IAAf;AACI,WAAK,kBAAL;AACI,eAAOF,KAAP;;AACJ,WAAK,qBAAL;AACI,eAAOA,KAAP;;AACJ;AACI,eAAOA,KAAP;AANR;AASH,GAVmC,EAUjCG,aAViC,CAFO;AAAA;AAAA,MAEpCH,KAFoC;AAAA,MAE7BI,QAF6B;;AAc3C,MAAMD,aAAa,GAAG,CAAC;AACnBE,IAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,GAAL,KAAW,IAAtB,CADe;AAEnBP,IAAAA,IAAI,EAAE,SAFa;AAGnBQ,IAAAA,KAAK,EAAE,4BAHY;AAInBC,IAAAA,OAAO,EAAE;AAJU,GAAD,CAAtB;AAOAP,EAAAA,QAAQ,CAAC;AAACF,IAAAA,IAAI,EAAE,kBAAP;AAA2BU,IAAAA,OAAO,EAAE;AAACP,MAAAA,EAAE,EAAFA,EAAD;AAAKH,MAAAA,IAAI,EAAJA,IAAL;AAAWQ,MAAAA,KAAK,EAALA,KAAX;AAAkBC,MAAAA,OAAO,EAAPA;AAAlB;AAApC,GAAD,CAAR;AAEJP,EAAAA,QAAQ,CAAC;AAACF,IAAAA,IAAI,EAAE,qBAAP;AAA8BU,IAAAA,OAAO,EAAEP;AAAvC,GAAD,CAAR;AAEI,SACI,oBAAC,oBAAD,CAAsB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,CAACc,QADX,CADJ;AAKH,CA9BM","sourcesContent":["import React, {createContext, useReducer} from 'react';\n\nexport const ToastCOntext = createContext()\n\nexport const ToastContextProvider = (props) => {\n    \n    const [state, dispatch] = useReducer((state, action) => {\n        switch (action.type) {\n            case \"ADD_NOTIFICATION\":\n                return state;\n            case \"DELETE_NOTIFICATION\":\n                return state;\n            default:\n                return state;\n\n        }\n    }, notifications)\n\n    const notifications = [{\n        id: Math.floor(Date.now()/1000),\n        type: \"SUCCESS\",\n        title: \"Successfully mined diamond\",\n        message: \"Got your NFT!\"\n    }]\n    \n    dispatch({type: \"ADD_NOTIFICATION\", payload: {id, type, title, message}})\n\ndispatch({type: \"DELETE_NOTIFICATION\", payload: id})\n\n    return (\n        <ToastContextProvider.Provider>\n            {props.children}\n        </ToastContextProvider.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}